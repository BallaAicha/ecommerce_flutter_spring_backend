services:
  postgresql:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: ousmane
      POSTGRES_PASSWORD: ousmane
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped
  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: ms_pg_sql
      DB_DATABASE: keycloak
#      DB_USER: ousmane
#      DB_PASSWORD: ousmane
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      JDBC_PARAMS: 'connectTimeout=30'
    depends_on:
      - postgresql
    command:
      - start-dev
    restart: always
    ports:
      - "9098:8080"
    networks:
      - microservices-net


  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=ousmane
      - MONGO_INITDB_ROOT_PASSWORD=ousmane

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8074:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=ousmane
      - ME_CONFIG_MONGODB_ADMINPASSWORD=ousmane
      - ME_CONFIG_MONGODB_SERVER=mongo_db
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1 # represente l'identifiant du serveur zookeeper local
      ZOOKEEPER_CLIENT_PORT: 2181 # port d'ecoute du serveur zookeeper
      ZOOKEEPER_TICK_TIME: 2000 # temps d'attente entre les battements de coeur
    ports:
      - "22181:2181"
    networks:
      - microservices-net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # facteur de replication du topic offsets
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 # facteur de replication du topic transaction state log
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 # nombre minimum de replicas in-sync
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 # adresse du serveur zookeeper et son port d'ecoute pour la connexion kafka
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # protocole de securite pour les ecouteurs
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092 # adresse de l'ecouteur kafka
    networks:
      - microservices-net
  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080 # port d'ecoute du serveur maildev
      - 1025:1025 # port d'ecoute du serveur smtp
networks:
  microservices-net:
    driver: bridge
volumes:
  postgres:
  pgadmin:
  mongo: